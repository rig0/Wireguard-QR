name: Update Docker Compose Version

on:
  push:
    branches:
      - main

jobs:
  update-docker-compose-version:
    runs-on: CodeServer
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update version in compose.yaml
        run: |
          # Get current version
          current_version=$(grep 'image: wireguard-qr' compose.yaml | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          IFS='.' read -ra VERSION <<< "$current_version"
          
          # Replace with new version
          new_version="${VERSION[0]}.${VERSION[1]}.$((VERSION[2]+1))"
          sed -i "s/wireguard-qr:$current_version/wireguard-qr:$new_version/" compose.yaml
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
          
          # Update docker-compose
          git add compose.yaml
          git commit -m "Update app version to $new_version"
          
          # Push changes using access token for authentication
          git push https://rambo:${{ secrets.GITEA_PAT }}@rigslab.com/Rambo/Wireguard-QR.git main

      - name: Shut down running dev container
        run: |
          ssh-keyscan -H Dev-Stack.home.arpa >> ~/.ssh/known_hosts
          ssh rambo@Dev-Stack.home.arpa 'ssh-keyscan -H ssh.rigslab.com >> ~/.ssh/known_hosts && cd /opt/stacks/wireguard-qr-dev && sudo docker-compose down && sudo docker images wireguard-qr -q | xargs -r sudo docker rmi'

      - name: Pull new version to dev server & update
        run: |
          ssh rambo@Dev-Stack.home.arpa 'git clone git@ssh.rigslab.com:Rambo/Wireguard-QR.git /tmp/wireguard-qr && rm -rf /opt/stacks/wireguard-qr-dev/* && cp -R /tmp/wireguard-qr/* /opt/stacks/wireguard-qr-dev && rm -R /tmp/wireguard-qr && cd /opt/stacks/wireguard-qr-dev && sudo docker-compose up -d'

      - name: Confirm the container is running
        run: |
          ssh rambo@Dev-Stack.home.arpa "
          for i in {1..10}; do
            if curl -s http://localhost:5182 > /dev/null; then
              echo 'Container is up and running.'
              exit 0
            fi
            echo 'Waiting for container to be ready... (\$i/10)'
            sleep 5
          done
          echo 'Container did not start in time.'
          exit 1"
        
      - name: Send notification
        run: /home/rambo/app-updated.sh "Wireguard-QR updated to $NEW_VERSION"

      - name: Send notification on failure
        if: failure()
        run: /home/rambo/app-updated.sh "Wireguard-QR Build $NEW_VERSION FAILED"